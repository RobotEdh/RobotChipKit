
     Every n miliseconds =>
       call CMD_CHECK to check the followong topics:
        Check Motion
        Check noise
        Check Temperature Variation
        Check Lux Variation
        Check contacts sensors left and right, return in case of obstacle
        Check distance using IR every 1 second, return in case < DISTANCE_MIN
             
     If alert trigerred =>
       call CMD_INFOS to get the following infos:
         0: motor_state
         1: SpeedMotorRight
         2: SpeedMotorLeft
         3: direction
         4: distance
         5: temperature
         6: brightness
         7: noise
         8: alert status
         9: picture number
      
       call CMD_ALERT to perform:
            If motor_state == STATE_GO => Stop
            Make 3 pictures left, front and right
            Send Infos + last 3 pictures in WIFI to the PI server if it is activated 

     Else if ESP8266 wants to do something (interrupt received) =>
       Read the message received from ESP8266
       If it is a command, Execute the command received from ESP8266 and reply to ESP8266
       If it is a response, Update the robot with the response received from ESP8266
    
     Else if the PI server is activated for periodic infos and delay is reached => 
       Call CMD_INFOS to get the following infos:
         0: motor_state
         1: SpeedMotorRight
         2: SpeedMotorLeft
         3: direction
         4: distance
         5: temperature
         6: brightness
         7: noise
         8: alert status
         9: picture number
     
       Send Infos in WIFI to the PI server
   
     Else if motor_state == STATE_GO =>
       Call CMD_GO to perform:
         if motor_state != STATE_GO, start_forward
         Call go to perform:
            Check Contacts sensors right and left
            Check distance minimum with IR every second
            return in case of obstacle
         if obstacle detected during go process then:   
            stop
            buzz(3);
            blink(Led_Red); 
            check_around using TiltPan and IR
            if (dir == DIRECTION_LEFT) 
                   start_forward
                   turn  -45 degrees during 5s max
            else if (dir == DIRECTION_RIGHT)
                   start_forward
                   turn  +45 degrees during 5s max
            else
               	   buzz(3);
                   blink(Led_Red);
              	   turn back during 10s max
                   
  
  
   